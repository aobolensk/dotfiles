#!/usr/bin/env python3

import subprocess
import tkinter
import tkinter.font as font
from enum import IntEnum


class MicState(IntEnum):
    UNKNOWN = 0
    ON = 1
    OFF = 2


class MicToggler(tkinter.Tk):
    def __init__(self) -> None:
        super().__init__()
        self.title("Mic toggler")
        self.resizable(False, False)
        self.geometry("200x200")
        self.mic_button_text = tkinter.StringVar()
        self.mic_button = tkinter.Button(
            textvariable=self.mic_button_text, command=self._toggle_mic_state, width=256, height=256)
        self.mic_button["font"] = font.Font(family="Noto Sans Emoji", size=64)
        self.mic_button.pack()
        self.mic_state = self._update_mic_state()

    def _parse_amicer_output(self, amixer_output):
        if b"[on]" in amixer_output:
            self.mic_button_text.set("ðŸ”ˆ")
            return MicState.ON
        if b"[off]" in amixer_output:
            self.mic_button_text.set("ðŸ”‡")
            return MicState.OFF
        return MicState.UNKNOWN

    def _update_mic_state(self):
        p = subprocess.Popen(["amixer", "get", "Capture"], stdout=subprocess.PIPE)
        return self._parse_amicer_output(p.communicate()[0])

    def _toggle_mic_state(self):
        p = subprocess.Popen(["amixer", "set", "Capture", "toggle"], stdout=subprocess.PIPE)
        return self._parse_amicer_output(p.communicate()[0])


def main():
    mic_toggler = MicToggler()
    mic_toggler.mainloop()


if __name__ == "__main__":
    main()
